// app/browse/[slug]/page.tsx
"use client";

import React, { use } from "react";
import { useQuery } from "convex/react";
import { ExplanationCard } from "@/components/explanation/explanation-card";
import { Button } from "@/components/ui/button";
import { api } from "@/convex/_generated/api";
import { notFound } from "next/navigation";
import { ArrowLeft } from "lucide-react";
import Link from "next/link";
import { useRouter } from "next/navigation";

interface BrowseDetailPageProps {
  params: Promise<{
    slug: string;
  }>;
}

// 验证slug格式
function isValidSlug(slug: string): boolean {
  return /^[a-z0-9-]+$/.test(slug) && slug.length > 0 && slug.length <= 60;
}

export default function BrowseDetailPage({ params }: BrowseDetailPageProps) {
  const router = useRouter();
  const resolvedParams = use(params);

  // 验证slug格式
  if (!isValidSlug(resolvedParams.slug)) {
    notFound();
  }

  const explanation = useQuery(api.queries.getPublicExplanationBySlug, {
    slug: resolvedParams.slug,
  });

  // 加载状态
  if (explanation === undefined) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
        <div className="flex items-center justify-center min-h-[60vh]">
          <div className="text-center">
            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-4"></div>
            <p>Loading explanation...</p>
          </div>
        </div>
      </div>
    );
  }

  // 不存在或不公开
  if (explanation === null) {
    notFound();
  }

  const handleAskSimilar = () => {
    router.push(`/session?q=${encodeURIComponent(explanation.question)}`);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
        {/* Navigation */}
        <div className="m-2">
          <Link href="/browse">
            <Button variant="ghost">
              <ArrowLeft className="mr-2 h-4 w-4" />
              Back to Browse
            </Button>
          </Link>
        </div>

        {/* Explanation Card */}
        <ExplanationCard
          explanation={explanation}
          onQuestionClick={handleAskSimilar}
          className="bg-white/90 backdrop-blur shadow-lg"
          viewMode="detail" // 新增的详情模式
        />

        {/* Related Actions */}
        <div className="mt-8 bg-white rounded-lg p-6 shadow-sm">
          <h3 className="text-lg font-semibold mb-4">Explore More</h3>
          <div className="flex flex-col sm:flex-row gap-4">
            <Button
              variant="outline"
              onClick={handleAskSimilar}
              className="flex-1"
            >
              Ask a Similar Question
            </Button>

            <Link href="/browse" className="flex-1">
              <Button variant="outline" className="w-full">
                Browse More Explanations
              </Button>
            </Link>

            <Link href="/session" className="flex-1">
              <Button className="w-full">Start New Exploration</Button>
            </Link>
          </div>
        </div>

        {/* SEO and Meta Info */}
        <div className="mt-8 text-center text-sm text-gray-500">
          <p>
            This explanation was generated by AI and reviewed for accuracy. Help
            improve physics education by{" "}
            <Link href="/session" className="text-primary hover:underline">
              asking your own questions
            </Link>
            .
          </p>
        </div>
      </div>
    </div>
  );
}
